using NUnit.Framework.Internal;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using log4net;
using OpenQA.Selenium.Safari;
using NLog;

namespace TVOLearnTests
{
    [TestFixture]
    public class TVOLearnTest
    {
        // Creating a WebDriver
        private IWebDriver driver;

        // Creating a logger
        ILog logger = log4net.LogManager.GetLogger(typeof(AutoGeneratedProgram));

        [SetUp]
        public void Setup()
        {
            // Choose the required web driver by commenting the other
            ChromeSetup();
            // SafariSetup();

        }

        [Test]
        public void TestNavigationToElementaryDropdown()
        {
            try
            {
                // Click on Elementary (K-8) dropdown
                IWebElement elementaryDropdown = driver.FindElement(By.XPath("//*[@id='SiteNav']/li[1]/button"));
                elementaryDropdown.Click();
                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

                // Assert that the Elementary (K-8) dropdown is in the viewport
                Assert.That(elementaryDropdown.Displayed, Is.True);

                // Log Message for Navigating to Elementary (K-8) dropdown
                LogStep("Navigating to Elementary (K-8) dropdown");

                // Dropdown Display
                IWebElement dropdownMenu = driver.FindElement(By.ClassName("site-nav__dropdown--left"));
                Thread.Sleep(1000);

                // Assert that the dropdown menu is displayed
                Assert.That(dropdownMenu.Displayed, Is.True);

                // Log Message for asserting the dropdown menu is displayed
                LogStep("Elementary (K-8) dropdown was successfully displayed");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }

        }

        [Test]
        public void TestSelectionOfGrade()
        {
            try
            {
                //Grade to be selected
                string grade = "Grade 1";

                // Click on Elementary (K-8) dropdown
                IWebElement elementaryDropdown = driver.FindElement(By.XPath("//*[@id='SiteNav']/li[1]/button"));
                elementaryDropdown.Click();
                Thread.Sleep(1000);

                // Assert that the Elementary (K-8) dropdown is in the viewport
                Assert.That(elementaryDropdown.Displayed, Is.True);

                // Log Message for Navigating to Elementary (K-8) dropdown
                LogStep("Navigated to Elementary (K-8) dropdown");

                // Select Grade from the dropdown menu
                IWebElement gradeOption = driver.FindElement(By.LinkText(grade));
                Thread.Sleep(1000);
                gradeOption.Click();

                // Log Message for Grade 1 selection
                LogStep("Grade-1 was selected");

                // Selected Grade page display
                IWebElement gradeDisplayed = driver.FindElement(By.XPath("//*[@id='s-7a1fb153-c696-4afe-bb5e-b1b8a4c85222']/ol/li[2]"));
                Thread.Sleep(1000);

                // Log Message for Grade 1 page is displayed
                LogStep("Navigated to Grade-1 page");

                // Validate that the URL contains Grade-1
                string currentUrl = driver.Url;
                Assert.That(currentUrl.Contains("grade-1"), Is.True);

                // Assert that Grade is displayed
                Assert.That(gradeDisplayed.Displayed, Is.True);

                // Log Message for asserting Grade-1 page is displayed
                LogStep("Grade-1 page was successfully displayed");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }

        }

        [Test]
        public void TestScrollToCurriculumSection()
        {
            try
            {
                // Click on Elementary (K-8) dropdown
                IWebElement elementaryDropdown = driver.FindElement(By.XPath("//*[@id='SiteNav']/li[1]/button"));
                elementaryDropdown.Click();
                Thread.Sleep(1000);

                // Assert that the Elementary (K-8) dropdown is in the viewport
                Assert.That(elementaryDropdown.Displayed, Is.True);

                // Log Message for Navigating to Elementary (K-8) dropdown
                LogStep("Navigated to Elementary (K-8) dropdown");

                // Select Grade from the dropdown menu
                IWebElement gradeOption = driver.FindElement(By.XPath("//*[@id='SiteNavLabel-elementary-k-8']/ul/li[2]/a"));
                gradeOption.Click();
                Thread.Sleep(1000);

                // Assert that Grade-1 page is in the viewport
                IWebElement grade1Page = driver.FindElement(By.XPath("//*[@id='s-9479b197-7240-460b-adbe-2dea7b60535e']/div/h1"));
                Thread.Sleep(1000);
                Assert.That(grade1Page.Displayed, Is.True);

                // Log Message for Grade 1 page is displayed
                LogStep("Navigated to Grade-1 page");

                // Scroll to "Learn Forward in the Curriculum" section
                IWebElement learnForwardSection = driver.FindElement(By.XPath("//*[@id='s-491edbc4-74e8-4f5d-98a0-eb3c84f985cc']/div"));
                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", learnForwardSection);
                Thread.Sleep(1000);

                // Assert that the "Learn Forward in the Curriculum" is in the viewport
                Assert.That(learnForwardSection.Displayed, Is.True);

                // Log Message for scrolled to "Learn Forward in the Curriculum" section 
                LogStep("Scrolled down to the Learn Forward in the Curriculum section of page");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestClickOnCard()
        {
            try
            {
                NavigateToMathematicsGrade1();

            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestSearchBoxFunctionality()
        {
            try
            {
                NavigateToMathematicsGrade1();

                // Click on Search option
                IWebElement searchButton = driver.FindElement(By.XPath("//*[@id='SiteNav']/li[6]/button"));
                searchButton.Click();
                Thread.Sleep(1000);

                // Log Message for locating search button
                LogStep("The search button was found and clicked.");

                // Display search box in viewport
                IWebElement search = driver.FindElement(By.XPath("//*[@id='SearchDrawer']/div/div[1]/form/input[1]"));
                IWebElement searchBox = search;
                Thread.Sleep(1000);

                // Assert search box is in viewport
                Assert.That(searchBox.Displayed, Is.True);

                // Enter text to search in search box
                string textToSearch = "youtube";
                searchBox.SendKeys(textToSearch);
                Thread.Sleep(1000);
                searchBox.SendKeys(Keys.Enter);

                // Log Message for entering text in search box
                LogStep("The text to be searched was entered.");

                // Search results display
                IWebElement webElement = driver.FindElement(By.XPath("//*[@id='MainContent']/div[2]/h1/span[1]"));
                IWebElement searchResults = webElement;
                Thread.Sleep(1000);

                // Assert search results is in viewport
                Assert.That(searchResults.Displayed, Is.True);

                // Log Message for search result display
                LogStep("The search results were displayed.");

                // Log Message for asserting Search box functionality
                LogStep("The search box functionality is working as expected.");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestLearningActivities()
        {
            try
            {
                NavigateToMathematicsGrade1();

                // Scroll to "Learning Activities" section
                IWebElement learningActivities = driver.FindElement(By.XPath("//*[@id='strandsTop']"));
                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", learningActivities);
                Thread.Sleep(1000);

                // Assert "Learning Activities" section is in viewport
                Assert.That(learningActivities.Displayed, Is.True);

                // Log Message for asserting "Learning Activities" section is in viewport
                LogStep("Learning Activities section was displayed.");

                // Selection of topic "Number" for learning
                IWebElement topic = driver.FindElement(By.XPath("//*[@id='tab0']/button"));
                topic.Click();

                // Log Message for clicking "Number" as topic
                LogStep("From Learning activities, the topic Number was selected.");

                // Display topic details
                IWebElement topicDetails = driver.FindElement(By.XPath("//*[@id='strandsTop']/div[2]/p[1]"));
                IWebElement details = topicDetails;
                Thread.Sleep(1000);

                // Assert topic details are displayed
                Assert.That(details.Displayed, Is.True);

                // Log Message for asserting topic details section is in viewport
                LogStep("The topic details section of Number was displayed.");

                // Display associated learning activities for topic Number
                IWebElement numberActivities = driver.FindElement(By.XPath("//*[@id='tab0']/div"));
                IWebElement activities = numberActivities;
                Thread.Sleep(1000);

                // Assert associated learning activities for topic Number are displayed
                Assert.That(activities.Displayed, Is.True);

                // Log Message for asserting associated learning activities for topic Number are displayed
                LogStep("The learning Activities under Number section were displayed.");

                // Selection of learning activity 1
                IWebElement learningActivity1 = driver.FindElement(By.XPath("//*[@id='tab0']/div/div/div[1]/a"));
                learningActivity1.Click();
                Thread.Sleep(1000);

                // Log Message for selection of learning activity 1
                LogStep("The Activity 1 was selected.");

                // Validate that the URL contains grade-1-mathematics-number-learning-activity-1
                string currentUrl = driver.Url;
                Assert.That(currentUrl.Contains("grade-1-mathematics-number-learning-activity-1"), Is.True);

                // Display of Learning Activity 1 page
                IWebElement numberLearningActivity = driver.FindElement(By.XPath("//*[@id='MainContent']/div/div[2]/div"));
                IWebElement result = numberLearningActivity;

                // Assert that Grade is displayed
                Assert.That(result.Displayed, Is.True);

                // Log Message learning activity 1 page displayed
                LogStep("The Activity 1 page was successfully displayed.");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestForChangingSubject()
        {
            try
            {
                NavigateToMathematicsGrade1();

                // Scroll to "Looking for a Different Subject" section
                IWebElement differentSubject = driver.FindElement(By.XPath("//*[@id='s-b58ad40a-8ef5-46be-ad12-d2d8edfc3de7']/div/h2"));
                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", differentSubject);
                Thread.Sleep(1000);

                // Assert that "Looking for a Different Subject" section is displayed
                Assert.That(differentSubject.Displayed, Is.True);

                // Log Message for scrolled to "Looking for a Different Subject" section 
                LogStep("Scrolled down to the Looking for a Different Subject section of page.");

                // Selection of different subject
                IWebElement scienceAndTechnology = driver.FindElement(By.XPath("//*[@id='s-5cf1e8dd-c678-4464-8751-efe6407a10bb']/div[1]"));
                scienceAndTechnology.Click();
                Thread.Sleep(1000);

                // Log Message for selection of different subject - Science and Technology
                LogStep("Science and Technology subject was selected.");

                // Navigated to subject page :  Science & Technology
                IWebElement scienceAndTechPage = driver.FindElement(By.XPath("//*[@id='s-e235c8ce-c10f-42b3-b324-32da5f7e97f5']/div/h2"));
                IWebElement subject = scienceAndTechPage;
                Thread.Sleep(1000);

                // Assert Grade 1 Science & Technology page is displayed
                Assert.That(subject.Displayed, Is.True);

                // Validate that the URL contains grade-1-science-and-technology
                string currentUrl = driver.Url;
                Assert.That(currentUrl.Contains("grade-1-science-and-technology"), Is.True);

                // Log Message Science and Technology page being displayed
                LogStep("Science and Technology page was successfulluy displayed.");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestForSubscriptionVerificationWithValidEmailId()
        {
            try
            {
                NavigateToMathematicsGrade1();

                // Scroll to Stay Connected section
                IWebElement stayConnected = driver.FindElement(By.XPath("//*[@id='mc_embed_signup']/div/div/h2"));
                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", stayConnected);
                Thread.Sleep(1000);

                // Assert that "Stay Connected" section is displayed
                Assert.That(stayConnected.Displayed, Is.True);

                // Log Message for scrolled to "Stay Connected" section 
                LogStep("Scrolled down to the Stay Connected section of page.");

                // Enter valid email ID 
                IWebElement subscribe = driver.FindElement(By.XPath("//*[@id='mce-EMAIL']"));
                subscribe.SendKeys("tvo_test@gmail.com");
                subscribe.SendKeys(Keys.Enter);
                Thread.Sleep(1000);

                // Log Message after entering a valid email id
                LogStep("A valid email id was entered for subscribing TVOLearn.");

                // Verify the Subscription response message for valid email id
                IWebElement subscriptionResponse = driver.FindElement(By.XPath("//*[@id='mce-success-response']"));
                IWebElement response = subscriptionResponse;
                Thread.Sleep(1000);

                // Assert Subscription response message element is displayed
                Assert.That(response.Displayed, Is.True);

                // Log Message for response message being displayed
                LogStep("A response message was displayed regarding the subscription process.");

                // Expected Response message
                string responseMessage = "Almost finished... We need to confirm your email address. To complete the subscription process, please click the link in the email we just sent you.";

                // Assert that a response message element contains expected text
                Assert.That(driver.FindElement(By.CssSelector("#mce-success-response")).Text, Is.EqualTo(responseMessage));

                // Log Message for asserting response message being displayed
                LogStep("The response message is as expected for a valid email id.");
            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestForSubscriptionVerificationWithInvalidEmailId()
        {
            try
            {
                NavigateToMathematicsGrade1();

                // Scroll to Stay Connected section
                IWebElement stayConnected = driver.FindElement(By.XPath("//*[@id='mc_embed_signup']/div/div/h2"));
                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", stayConnected);
                Thread.Sleep(1000);

                // Assert that "Stay Connected" section is displayed
                Assert.That(stayConnected.Displayed, Is.True);

                // Log Message for scrolled to "Stay Connected" section 
                LogStep("Scrolled down to the Stay Connected section of page.");

                // Enter invalid email ID 
                IWebElement subscribe = driver.FindElement(By.XPath("//*[@id='mce-EMAIL']"));
                subscribe.SendKeys("tvolearning_test");
                subscribe.SendKeys(Keys.Enter);
                Thread.Sleep(1000);

                // Log Message after entering a valid email id
                LogStep("An invalid email id was entered for subscribing TVOLearn.");

                // Verify the Subscription response message for invalid email id
                IWebElement subscriptionResponse = driver.FindElement(By.XPath("//*[@id='mc_embed_signup_scroll']/div/div"));
                IWebElement response = subscriptionResponse;
                Thread.Sleep(1000);

                // Assert invalid email response message is displayed
                Assert.That(response.Displayed, Is.True);

                // Log Message for response message being displayed
                LogStep("A response message was displayed regarding the invalid email id.");

                // Expected Response message
                string responseMessage = "Please enter a valid email address.";

                // Assert that a response message element contains expected text
                Assert.That(driver.FindElement(By.CssSelector("#mc_embed_signup_scroll > div > div")).Text, Is.EqualTo(responseMessage));

                // Log Message for asserting response message being displayed
                LogStep("The response message is as expected for an invalid email id.");

            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [Test]
        public void TestForSubscriptionVerificationWithNoEmailId()
        {
            try
            {
                NavigateToMathematicsGrade1();

                // Scroll to Stay Connected section
                IWebElement stayConnected = driver.FindElement(By.XPath("//*[@id='mc_embed_signup']/div/div/h2"));
                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", stayConnected);
                Thread.Sleep(1000);

                // Assert that "Stay Connected" section is displayed
                Assert.That(stayConnected.Displayed, Is.True);

                // Log Message for scrolled to "Stay Connected" section 
                LogStep("Scrolled down to the Stay Connected section of page.");

                // Do not enter the email id 
                IWebElement subscribe = driver.FindElement(By.XPath("//*[@id='mce-EMAIL']"));
                subscribe.SendKeys("");
                subscribe.SendKeys(Keys.Enter);
                Thread.Sleep(1000);

                // Log Message after not entering email id
                LogStep("No email id was entered for subscribing TVOLearn.");

                // Verify the Subscription response message for no email id
                IWebElement subscriptionResponse = driver.FindElement(By.XPath("//*[@id='mc_embed_signup_scroll']/div/div"));
                IWebElement response = subscriptionResponse;
                Thread.Sleep(1000);

                // Assert email id required response message is displayed
                Assert.That(response.Displayed, Is.True);

                // Log Message for response message being displayed
                LogStep("A response message was displayed regarding no email id entered.");

                // Expected Response message
                string responseMessage = "This field is required.";

                // Assert that a response message element contains expected text
                Assert.That(driver.FindElement(By.CssSelector("#mc_embed_signup_scroll > div > div")).Text, Is.EqualTo(responseMessage));

                // Log Message for asserting response message being displayed
                LogStep("The response message is as expected when no email id is entered.");

            }
            catch (Exception ex)
            {
                // Logg error occoured
                LogError("Error: " + ex.Message);
                throw;
            }
        }

        [TearDown]
        public void Cleanup()
        {
            // Quit the driver and close the browser
            driver.Quit();
        }

        // Chrome driver setup
        private void ChromeSetup()
        {
            // Set up Chrome driver
            driver = new ChromeDriver();
            driver.Manage().Window.Maximize();

            //Navigate to TVO Learn webpage
            driver.Navigate().GoToUrl("https://tvolearn.com/");

            // Log Message for launching TVO Learn home page on Chrome browser
            LogStep("Successfully launched TVO Learn home page on Chrome browser.");

        }

        // Safari driver setup
        private void SafariSetup()
        {
            // Set up Safari driver
            driver = new SafariDriver();
            driver.Manage().Window.Maximize();

            //Navigate to TVO Learn webpage
            driver.Navigate().GoToUrl("https://tvolearn.com/");

            // Log Message for launching TVO Learn home page on Safari browser
            LogStep("Successfully launched TVO Learn home page on Safari browser.");
        }

        // Performs action of navigationg to Matehmatics section of Grade 1
        private void NavigateToMathematicsGrade1()
        {
            // Click on Elementary (K-8) dropdown
            IWebElement elementaryDropdown = driver.FindElement(By.XPath("//*[@id='SiteNav']/li[1]/button"));
            elementaryDropdown.Click();
            Thread.Sleep(1000);

            // Assert that the Elementary (K-8) dropdown is in the viewport
            Assert.That(elementaryDropdown.Displayed, Is.True);

            // Log Message for Navigating to Elementary (K-8) dropdown
            LogStep("Navigated to Elementary (K-8) dropdown.");

            // Select Grade from the dropdown menu
            IWebElement gradeOption = driver.FindElement(By.XPath("//*[@id='SiteNavLabel-elementary-k-8']/ul/li[2]/a"));
            gradeOption.Click();
            Thread.Sleep(1000);

            // Assert that Grade-1 page is in the viewport
            IWebElement grade1Page = driver.FindElement(By.XPath("//*[@id='s-9479b197-7240-460b-adbe-2dea7b60535e']/div/h1"));
            Thread.Sleep(1000);
            Assert.That(grade1Page.Displayed, Is.True);

            // Log Message for Grade 1 page is displayed
            LogStep("Navigated to Grade-1 page.");

            // Scroll to "Learn Forward in the Curriculum" section
            IWebElement learnForwardSection = driver.FindElement(By.XPath("//*[@id='s-491edbc4-74e8-4f5d-98a0-eb3c84f985cc']/div"));
            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", learnForwardSection);
            Thread.Sleep(1000);

            // Assert that the section is in the viewport
            Assert.That(learnForwardSection.Displayed, Is.True);

            // Log Message for scrolled to "Learn Forward in the Curriculum" section 
            LogStep("Scrolled down to the Learn Forward in the Curriculum section of page.");

            // Click on Mathematics card in the section
            IWebElement cardSelected = driver.FindElement(By.XPath("//*[@id='s-f9924085-cdf6-409f-b476-67d7c5a74702']/div[1]"));
            cardSelected.Click();
            Thread.Sleep(1000);

            // Log message for Mathematics page selection
            LogStep("Mathematics page was selected.");

            // Assert that the Mathematics section is in the viewport
            IWebElement mathematicsPage = driver.FindElement(By.XPath("//*[@id='s-e235c8ce-c10f-42b3-b324-32da5f7e97f5']/div/h2"));
            Assert.That(mathematicsPage.Displayed, Is.True);

            // Log message for Mathematics page being displayed
            LogStep("Mathematics page was successfully displayed.");
        }

        // Helper method to log test steps
        private void LogStep(string message)
        {
            logger.Debug(message);
            TestContext.WriteLine(message);
        }

        // Helper method to log test errors
        private void LogError(string message)
        {
            logger.Error(message);
            TestContext.WriteLine(message);
        }
    }
}
